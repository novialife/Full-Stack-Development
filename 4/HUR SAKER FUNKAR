/api calls går till auth.router


//INDEX

// All chat endpoints require the user to be authenticated.
// Vid användning av chatten kontrolleras användarens autentikation
// sedan går den till chat router


// Kallar först /api/rooms och sedan /api/rooms/blablabla
// Skapar ett rum som användaren kan gå in i
model.createRoom("blablabla"); // demo call



// CHAT CONTROLLER

/**
 * API (see the route handlers below) should combine uniquely identifiable resources (paths)
 * with the appropriate HTTP request methods (GET, POST, PUT, DELETE and more) to manipulate them.
 *
 * GET     /rooms                       =>  get all rooms
 * GET     /rooms/{name}/messages       =>  get all messages in a room with the given name
 * POST    /rooms/{name}/messages       =>  create a new message in a room with the given name
 * PUT     /rooms/{name}/messages/{id}  =>  update a message with the given id in a room with the given name
 * DELETE  /rooms/{name}/messages/{id}  =>  delete a message with the given id in a room with the given name
 * etc.
 */



// AUTH CONTROLLER

// När man gör: / -> GET korresponderande assets -> /api/users/me


// Hämtar userID
// Kollar ifall user finns i modellen som innehåller alla users
// Ifall inte, returnerar felmeddelande
// Annars låter gå vidare
const requireAuth = (req, res, next) => {




// Förhindrar en redan inloggad användare att komma till login-sidan
// Kallas vid anrop till /
router.get("/users/me", (req, res) => {




// Körs när man klickar på OK på huvudskärmen. Enda gången som en post kommer /login
router.post("/login", (req, res) => {





// CLIENT SIDAN

App.vue innehåller egentligen hela sidan. Dvs. navbar och sånt
Views är varje individuell sida som man kan gå till
